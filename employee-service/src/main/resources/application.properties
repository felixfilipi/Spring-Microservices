#CONFIG RUN ON CONFIG SERVER (:8888) GH

#spring.datasource.url=jdbc:postgresql://localhost:5432/employee_db
#spring.datasource.username=felixfilipi
#spring.datasource.password=l0rd3dw4rd
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
#spring.jpa.hibernate.ddl-auto=update
#
#server.port=8081
#
### Enable actuator endpoint
#management.endpoints.web.exposure.include=*
#management.info.env.enabled=true
#
### Define swagger metadata
#info.app.name=Spring boot Microservice
#info.app.description=Spring Boot Microservice tutorial
#info.app.version=1.0.9
#
### Register to service registry / eureka server

#eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

spring.application.name=employee-service
spring.config.import=optional:configserver:http://localhost:8888/

##Actuator endpoint for circuit breaker
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always
#
## Circuit breaker configuration
#resilience4j.circuitbreaker.instances.employee-service.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.employee-service.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.employee-service.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.employee-service.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.employee-service.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.employee-service.permittedNumberOfCallsInHalfOpenState=3
#
## size of sliding window to record the outcome of calls when the circuitbreaker closed
#resilience4j.circuitbreaker.instances.employee-service.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.employee-service.slidingWindowType=COUNT_BASED

# Retry Configuration
resilience.retry.instances.employee-service.registerHealthIndicator=true
resilience.retry.instances.employee-service.maxRetryAttempts=5
resilience.retry.instances.employee-service.waitDuration=1s
